/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Database as PrismaDatabase } from "@prisma/client";

export class DatabaseServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.DatabaseCountArgs, "select">): Promise<number> {
    return this.prisma.database.count(args);
  }

  async databases(
    args: Prisma.DatabaseFindManyArgs
  ): Promise<PrismaDatabase[]> {
    return this.prisma.database.findMany(args);
  }
  async database(
    args: Prisma.DatabaseFindUniqueArgs
  ): Promise<PrismaDatabase | null> {
    return this.prisma.database.findUnique(args);
  }
  async createDatabase(
    args: Prisma.DatabaseCreateArgs
  ): Promise<PrismaDatabase> {
    return this.prisma.database.create(args);
  }
  async updateDatabase(
    args: Prisma.DatabaseUpdateArgs
  ): Promise<PrismaDatabase> {
    return this.prisma.database.update(args);
  }
  async deleteDatabase(
    args: Prisma.DatabaseDeleteArgs
  ): Promise<PrismaDatabase> {
    return this.prisma.database.delete(args);
  }
}
